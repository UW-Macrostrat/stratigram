/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/column": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.column.id"];
          project_id?: parameters["rowFilter.column.project_id"];
          name?: parameters["rowFilter.column.name"];
          description?: parameters["rowFilter.column.description"];
          geometry?: parameters["rowFilter.column.geometry"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["column"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** column */
          column?: definitions["column"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.column.id"];
          project_id?: parameters["rowFilter.column.project_id"];
          name?: parameters["rowFilter.column.name"];
          description?: parameters["rowFilter.column.description"];
          geometry?: parameters["rowFilter.column.geometry"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.column.id"];
          project_id?: parameters["rowFilter.column.project_id"];
          name?: parameters["rowFilter.column.name"];
          description?: parameters["rowFilter.column.description"];
          geometry?: parameters["rowFilter.column.geometry"];
        };
        body: {
          /** column */
          column?: definitions["column"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/column_obs": {
    get: {
      parameters: {
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["column_obs"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** column_obs */
          column_obs?: definitions["column_obs"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        body: {
          /** column_obs */
          column_obs?: definitions["column_obs"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/column_surface": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.column_surface.id"];
          height?: parameters["rowFilter.column_surface.height"];
          column_id?: parameters["rowFilter.column_surface.column_id"];
          lithology_id?: parameters["rowFilter.column_surface.lithology_id"];
          facies_id?: parameters["rowFilter.column_surface.facies_id"];
          grainsize?: parameters["rowFilter.column_surface.grainsize"];
          covered?: parameters["rowFilter.column_surface.covered"];
          schematic?: parameters["rowFilter.column_surface.schematic"];
          surface_type?: parameters["rowFilter.column_surface.surface_type"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["column_surface"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
  };
  "/facies": {
    get: {
      parameters: {
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["facies"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** facies */
          facies?: definitions["facies"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        body: {
          /** facies */
          facies?: definitions["facies"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/facies_model": {
    get: {
      parameters: {
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["facies_model"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** facies_model */
          facies_model?: definitions["facies_model"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        body: {
          /** facies_model */
          facies_model?: definitions["facies_model"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/grainsize": {
    get: {
      parameters: {
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["grainsize"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** grainsize */
          grainsize?: definitions["grainsize"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        body: {
          /** grainsize */
          grainsize?: definitions["grainsize"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/lithology": {
    get: {
      parameters: {
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["lithology"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** lithology */
          lithology?: definitions["lithology"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        body: {
          /** lithology */
          lithology?: definitions["lithology"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/project": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.project.id"];
          name?: parameters["rowFilter.project.name"];
          description?: parameters["rowFilter.project.description"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["project"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** project */
          project?: definitions["project"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.project.id"];
          name?: parameters["rowFilter.project.name"];
          description?: parameters["rowFilter.project.description"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.project.id"];
          name?: parameters["rowFilter.project.name"];
          description?: parameters["rowFilter.project.description"];
        };
        body: {
          /** project */
          project?: definitions["project"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  column: {
    /**
     * Format: integer
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id?: number;
    /**
     * Format: integer
     * @description Note:
     * This is a Foreign Key to `project.id`.<fk table='project' column='id'/>
     */
    project_id?: number;
    /** Format: text */
    name?: string;
    /** Format: text */
    description?: string;
    /** Format: public.geometry(Geometry,4326) */
    geometry?: string;
  };
  column_obs: { [key: string]: unknown };
  column_surface: {
    /**
     * Format: integer
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id?: number;
    /** Format: numeric */
    height?: number;
    /**
     * Format: integer
     * @description Note:
     * This is a Foreign Key to `column.id`.<fk table='column' column='id'/>
     */
    column_id?: number;
    /** Format: integer */
    lithology_id?: number;
    /** Format: integer */
    facies_id?: number;
    /** Format: text */
    grainsize?: string;
    /** Format: boolean */
    covered?: boolean;
    /** Format: boolean */
    schematic?: boolean;
    /** Format: text */
    surface_type?: string;
  };
  facies: { [key: string]: unknown };
  facies_model: { [key: string]: unknown };
  grainsize: { [key: string]: unknown };
  lithology: { [key: string]: unknown };
  project: {
    /**
     * Format: integer
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id?: number;
    /** Format: text */
    name?: string;
    /** Format: text */
    description?: string;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: "params=single-object";
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: "count=none";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description column */
  "body.column": definitions["column"];
  /** Format: integer */
  "rowFilter.column.id": string;
  /** Format: integer */
  "rowFilter.column.project_id": string;
  /** Format: text */
  "rowFilter.column.name": string;
  /** Format: text */
  "rowFilter.column.description": string;
  /** Format: public.geometry(Geometry,4326) */
  "rowFilter.column.geometry": string;
  /** @description column_obs */
  "body.column_obs": definitions["column_obs"];
  /** @description column_surface */
  "body.column_surface": definitions["column_surface"];
  /** Format: integer */
  "rowFilter.column_surface.id": string;
  /** Format: numeric */
  "rowFilter.column_surface.height": string;
  /** Format: integer */
  "rowFilter.column_surface.column_id": string;
  /** Format: integer */
  "rowFilter.column_surface.lithology_id": string;
  /** Format: integer */
  "rowFilter.column_surface.facies_id": string;
  /** Format: text */
  "rowFilter.column_surface.grainsize": string;
  /** Format: boolean */
  "rowFilter.column_surface.covered": string;
  /** Format: boolean */
  "rowFilter.column_surface.schematic": string;
  /** Format: text */
  "rowFilter.column_surface.surface_type": string;
  /** @description facies */
  "body.facies": definitions["facies"];
  /** @description facies_model */
  "body.facies_model": definitions["facies_model"];
  /** @description grainsize */
  "body.grainsize": definitions["grainsize"];
  /** @description lithology */
  "body.lithology": definitions["lithology"];
  /** @description project */
  "body.project": definitions["project"];
  /** Format: integer */
  "rowFilter.project.id": string;
  /** Format: text */
  "rowFilter.project.name": string;
  /** Format: text */
  "rowFilter.project.description": string;
}

export interface operations {}

export interface external {}
