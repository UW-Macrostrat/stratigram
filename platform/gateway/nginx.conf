server {
  # Listen to port 443 on both IPv4 and IPv6.
  listen 80;
  listen  [::]:80;

  location /api/storage/ {
    resolver 127.0.0.11 valid=30s;
    proxy_pass http://storage_api:5000/;
    proxy_set_header Host $host;

    # Allow us to send larger request bodies.
    client_max_body_size 50M;

    if ($request_method = OPTIONS) {
        add_header Access-Control-Allow-Origin $http_origin;
        add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS, PUT, DELETE';
        add_header Access-Control-Allow-Headers "Authorization,Content-Type,Content-Length,x-client-info,x-upsert";
        add_header Content-Type text/plain;
        add_header Content-Length 0;
        return 204;
    }

    # https://stackoverflow.com/questions/64889343/cross-origin-preflight-request-in-nginx-proxy
    add_header Access-Control-Allow-Origin * always;
    add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS, PUT, DELETE';
  }

  location /api/v1/ {
    # This config (including the seemingly useless variable declaration!)
    # prevents failures if some sub-container doesn't come up.
    resolver 127.0.0.11 valid=30s;
    proxy_pass http://api:3000/;
    proxy_set_header Host $host;

    add_header Access-Control-Allow-Origin * always;
  }

  location / {
    default_type text/html;
    return 200 "<!DOCTYPE html>
    <h1>Macrostrat Stratiform data service</h1>
    <ul>
      <li>API: <a href='/api/v1/'><code>/api/v1/</code></a></li>
      <li>Storage API: <a href='/api/storage/'><code>/api/storage/</code></a></li>
    </ul>\n";

  }

}
